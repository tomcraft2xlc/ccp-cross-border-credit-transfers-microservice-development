plugins {
    id 'java'
    id 'org.kordamp.gradle.jandex' version '2.0.0'
    id "org.jsonschema2pojo" version "1.2.2"
}

configurations {
    jaxb
}

ext.jaxbSourceDir = "${layout.buildDirectory.get()}/generated-sources/jaxb"

sourceSets {
    main {
        java {
            srcDir jaxbSourceDir
        }
    }
}

ext.xsdPackage = "com.flowpay.ccp.xsd.types"

tasks.register("genJaxb") {
    ext.bffXSD = "$projectDir/src/main/resources/xsd/ECGlobalApplicationCommand.xsd"
    outputs.dir(jaxbSourceDir)
    doLast {
        ant {
            taskdef(name: "xjc",
                classname: "com.sun.tools.xjc.XJCTask",
                classpath: configurations.jaxb.asPath
            )
            xjc(destdir: jaxbSourceDir, schema: bffXSD) {
                arg(value: "-wsdl")
                produces(dir: "sourcesDir", includes: "**/*.java")
            }
            xjc(destDir: jaxbSourceDir) {
                schema(dir: "$projectDir/src/main/resources/xsd/", includes: "*.xsd")
                arg(value: "-disableXmlSecurity")
                produces(dir: "sourcesDir", includes: "**/*.java")
            }
        }
    }
}

compileJava {
    dependsOn genJaxb
}

jsonSchema2Pojo {
    targetPackage = 'com.flowpay.ccp.iso.external.code.set'

    useJakartaValidation = true

    removeOldOutput = true

}

dependencies {

    jaxb "org.glassfish.jaxb:jaxb-xjc:4.0.0"
    jaxb "org.glassfish.jaxb:jaxb-runtime:4.0.0"


    implementation 'javax.validation:validation-api:1.1.0.CR2'
    implementation 'jakarta.validation:jakarta.validation-api:3.0.0'

    implementation 'com.fasterxml.jackson.core:jackson-databind:2.15.2'

    implementation platform("${quarkusPlatformGroupId}:${quarkusPlatformArtifactId}:${quarkusPlatformVersion}")
    implementation platform("com.flowpay.ccp:ccp-library-bom:${ccpPlatformVersion}")

    implementation 'io.quarkus:quarkus-smallrye-reactive-messaging'
    implementation 'io.smallrye.reactive:smallrye-reactive-messaging-jms'

    implementation 'org.apache.activemq:artemis-jakarta-client:2.37.0'
    implementation 'jakarta.jms:jakarta.jms-api:3.1.0'

    implementation 'io.quarkus:quarkus-smallrye-context-propagation'
    implementation 'io.quarkus:quarkus-redis-client'

    implementation 'io.quarkus:quarkus-rest'
    implementation 'io.quarkus:quarkus-rest-jackson'
    implementation 'io.quarkus:quarkus-rest-client'
    implementation 'io.quarkus:quarkus-rest-client-jackson'
    implementation 'io.quarkus:quarkus-micrometer'

    implementation 'com.google.guava:guava:33.3.1-jre'

    implementation 'io.quarkus:quarkus-reactive-pg-client'

    implementation 'io.quarkus:quarkus-hibernate-validator'

    implementation 'com.flowpay.ccp:ccp-job'
    implementation 'com.flowpay.ccp:ccp-persistence'
    implementation 'com.flowpay.ccp:ccp-log-handler'
    implementation 'com.flowpay.ccp:ccp-poll-client'
    implementation 'com.flowpay.ccp:ccp-auth-client'
    implementation 'com.flowpay.ccp:ccp-cip-client'
    implementation 'com.flowpay.ccp:ccp-pagination'

    implementation "org.javatuples:javatuples:1.2"

    implementation 'com.prowidesoftware:pw-iso20022:SRU2024-10.2.3'

    implementation 'org.mapstruct:mapstruct:1.6.3'
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.6.3'

    testImplementation 'io.quarkus:quarkus-junit5'
    testImplementation 'io.quarkus:quarkus-junit5-mockito'
    testImplementation 'io.rest-assured:rest-assured'
    testImplementation 'org.wiremock:wiremock:3.9.1'
    testImplementation 'io.quarkus:quarkus-test-security'
    testImplementation platform('io.quarkiverse.artemis:quarkus-artemis-bom:3.0.7')
    testImplementation 'io.quarkiverse.artemis:quarkus-artemis-jms'
    testImplementation 'io.quarkiverse.artemis:quarkus-test-artemis'
    testImplementation 'io.smallrye.reactive:smallrye-mutiny-vertx-web-client'

    implementation("io.quarkus:quarkus-smallrye-openapi")

    implementation "org.mapstruct:mapstruct:1.6.3"
    annotationProcessor "org.mapstruct:mapstruct-processor:1.6.3"
}